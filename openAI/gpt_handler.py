import openai
import os

# OpenAI API Key (–∑–º—ñ–Ω–Ω–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞)
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –û—Ç—Ä–∏–º—É—î–º–æ –∞–±—Å–æ–ª—é—Ç–Ω–∏–π —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É ACCOUNTING_POLICY.txt
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
POLICY_PATH = os.path.join(BASE_DIR, "ACCOUNTING_POLICY.txt")

# –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, —è–∫—ñ –±–æ—Ç –≤–∂–µ –æ–±—Ä–æ–±–ª—è—î –æ–∫—Ä–µ–º–æ
KNOWN_COMMANDS = [
    "/menu", "/debt", "/salary", "/analytics", "/info",  # –î–æ–¥–∞–Ω—ñ –∫–æ–º–∞–Ω–¥–∏
    "üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞", "üíº –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∏–π –ª–∏—Å—Ç", "üìâ –î–µ–±—ñ—Ç–æ—Ä—Å—å–∫–∞ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å",
    "üí± –ö—É—Ä—Å –≤–∞–ª—é—Ç", "–¢–∞–±–ª–∏—Ü—è", "–ì—ñ—Å—Ç–æ–≥—Ä–∞–º–∞", "–î—ñ–∞–≥—Ä–∞–º–∞", "–ù–∞–∑–∞–¥", "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é",
    "‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–µ–≤–∞–ª—å–≤–∞—Ü—ñ—ó", "–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –∑–∞ –º—ñ—Å—è—Ü—å", "–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –∑–∞ —Ä—ñ–∫",
    "2024", "2025", "–°—ñ—á–µ–Ω—å", "–õ—é—Ç–∏–π", "–ë–µ—Ä–µ–∑–µ–Ω—å", "–ö–≤—ñ—Ç–µ–Ω—å", "–¢—Ä–∞–≤–µ–Ω—å", "–ß–µ—Ä–≤–µ–Ω—å",
    "–õ–∏–ø–µ–Ω—å", "–°–µ—Ä–ø–µ–Ω—å", "–í–µ—Ä–µ—Å–µ–Ω—å", "–ñ–æ–≤—Ç–µ–Ω—å", "–õ–∏—Å—Ç–æ–ø–∞–¥", "–ì—Ä—É–¥–µ–Ω—å",
    "–î–æ—Ö—ñ–¥", "–í–∞–ª–æ–≤–∏–π –ø—Ä–∏–±—É—Ç–æ–∫", "–ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω—ñ—Å—Ç—å", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É–≥–æ–¥",
    "–ü—Ä–æ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–∞ –¥–µ–±—ñ—Ç–æ—Ä—Å—å–∫–∞ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å"
]


# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–±–ª—ñ–∫–æ–≤–æ—ó –ø–æ–ª—ñ—Ç–∏–∫–∏ –∑ —Ñ–∞–π–ª—É
def load_policy():
    try:
        with open(POLICY_PATH, "r", encoding="utf-8") as file:
            return file.read()
    except FileNotFoundError:
        return "–û–±–ª—ñ–∫–æ–≤–∞ –ø–æ–ª—ñ—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."

ACCOUNTING_POLICY = load_policy()

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—é –∫–æ–º–∞–Ω–¥–æ—é
def is_known_command(text):
    return text in KNOWN_COMMANDS

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ GPT-3.5 Turbo

def get_gpt_response(user_input):
    if not OPENAI_API_KEY:
        return "–ü–æ–º–∏–ª–∫–∞: API-–∫–ª—é—á OpenAI –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."

    client = openai.OpenAI(api_key=OPENAI_API_KEY)  # –ù–æ–≤–∏–π –ø—ñ–¥—Ö—ñ–¥
    
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": f"–¢–∏ - –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏–π —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –ª–∏—à–µ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –æ–±–ª—ñ–∫–æ–≤–æ—ó –ø–æ–ª—ñ—Ç–∏–∫–∏:\n{ACCOUNTING_POLICY}"},
            {"role": "user", "content": user_input}
        ],
        temperature=0.2
    )

    total_tokens = response.usage.total_tokens
    prompt_tokens = response.usage.prompt_tokens
    completion_tokens = response.usage.completion_tokens

    # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ç–æ–∫–µ–Ω–∏
    result = f"ü§ñ {response.choices[0].message.content}\n\n"
    result += f"üìä –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ —Ç–æ–∫–µ–Ω–∏: {total_tokens} (–∑–∞–ø–∏—Ç: {prompt_tokens}, –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {completion_tokens})"

    return response.choices[0].message.content

