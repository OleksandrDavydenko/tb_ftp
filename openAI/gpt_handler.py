import openai
import os
import logging
from db import save_gpt_query, get_last_gpt_queries
from datetime import datetime
 

# OpenAI API Key (–∑–º—ñ–Ω–Ω–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞)
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –û—Ç—Ä–∏–º—É—î–º–æ –∞–±—Å–æ–ª—é—Ç–Ω–∏–π —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É ACCOUNTING_POLICY.txt
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
POLICY_PATH = os.path.join(BASE_DIR, "ACCOUNTING_POLICY.txt")

# –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, —è–∫—ñ –±–æ—Ç –≤–∂–µ –æ–±—Ä–æ–±–ª—è—î –æ–∫—Ä–µ–º–æ
KNOWN_COMMANDS = [
    "/menu", "/debt", "/salary", "/analytics", "/info", "/hr", 
    "üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞", "üíº –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∏–π –ª–∏—Å—Ç", "üìâ –î–µ–±—ñ—Ç–æ—Ä—Å—å–∫–∞ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å",
    "üí± –ö—É—Ä—Å –≤–∞–ª—é—Ç", "–¢–∞–±–ª–∏—Ü—è", "–ì—ñ—Å—Ç–æ–≥—Ä–∞–º–∞", "–î—ñ–∞–≥—Ä–∞–º–∞", "–ù–∞–∑–∞–¥", "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é",
    "‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–µ–≤–∞–ª—å–≤–∞—Ü—ñ—ó", "–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –∑–∞ –º—ñ—Å—è—Ü—å", "–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –∑–∞ —Ä—ñ–∫",
    "2024", "2025","2026","2027", "–°—ñ—á–µ–Ω—å", "–õ—é—Ç–∏–π", "–ë–µ—Ä–µ–∑–µ–Ω—å", "–ö–≤—ñ—Ç–µ–Ω—å", "–¢—Ä–∞–≤–µ–Ω—å", "–ß–µ—Ä–≤–µ–Ω—å",
    "–õ–∏–ø–µ–Ω—å", "–°–µ—Ä–ø–µ–Ω—å", "–í–µ—Ä–µ—Å–µ–Ω—å", "–ñ–æ–≤—Ç–µ–Ω—å", "–õ–∏—Å—Ç–æ–ø–∞–¥", "–ì—Ä—É–¥–µ–Ω—å",
    "–î–æ—Ö—ñ–¥", "–í–∞–ª–æ–≤–∏–π –ø—Ä–∏–±—É—Ç–æ–∫", "–ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω—ñ—Å—Ç—å", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É–≥–æ–¥",
    "–ü—Ä–æ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–∞ –¥–µ–±—ñ—Ç–æ—Ä—Å—å–∫–∞ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å", "üßæ –ö–∞–¥—Ä–æ–≤–∏–π –æ–±–ª—ñ–∫", "üóì –ó–∞–ª–∏—à–∫–∏ –≤—ñ–¥–ø—É—Å—Ç–æ–∫", 
    "üïì –í—ñ–¥–ø—Ä–∞—Ü—å–æ–≤–∞–Ω—ñ –¥–Ω—ñ", "üìò –î–æ–≤—ñ–¥–∫–∞","üíº –ó–∞—Ä–ø–ª–∞—Ç–∞", "üíº –û–∫–ª–∞–¥", "üéÅ –í—ñ–¥–æ–º—ñ—Å—Ç—å –ë–æ–Ω—É—Å–∏", 
    "üí∞ –ë–æ–Ω—É—Å–∏", "üëë –ü—Ä–µ–º—ñ—ó –∫–µ—Ä—ñ–≤–Ω–∏–∫—ñ–≤", "üëî –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç–∞–∂", "üìú –í—ñ–¥–æ–º—ñ—Å—Ç—å –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞",
    "üßæ –û–ø–∏—Å –∑–º—ñ–Ω"
]

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–±–ª—ñ–∫–æ–≤–æ—ó –ø–æ–ª—ñ—Ç–∏–∫–∏ –∑ —Ñ–∞–π–ª—É
def load_policy():
    try:
        with open(POLICY_PATH, "r", encoding="utf-8") as file:
            return file.read()
    except FileNotFoundError:
        logging.error("‚ùå –§–∞–π–ª –æ–±–ª—ñ–∫–æ–≤–æ—ó –ø–æ–ª—ñ—Ç–∏–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return "–û–±–ª—ñ–∫–æ–≤–∞ –ø–æ–ª—ñ—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."

ACCOUNTING_POLICY = load_policy()

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—é –∫–æ–º–∞–Ω–¥–æ—é
def is_known_command(text):
    return text in KNOWN_COMMANDS

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ GPT-3.5 Turbo
def get_gpt_response(user_input, user_id, employee_name, message_id):
    if not OPENAI_API_KEY:
        logging.error("‚ùå API-–∫–ª—é—á OpenAI –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return "–ü–æ–º–∏–ª–∫–∞: API-–∫–ª—é—á OpenAI –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."

    client = openai.OpenAI(api_key=OPENAI_API_KEY)

    # –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ 3 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ë–î
    chat_history = get_last_gpt_queries(user_id, limit=2)
    current_date = datetime.now().strftime('%Y-%m-%d')

    # –§–æ—Ä–º—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    messages = [
        {"role": "system", "content": "–¢–∏ - –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏–π —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ —É Telegram-–±–æ—Ç—ñ."},
        {"role": "system", "content": f"""
        –°—å–æ–≥–æ–¥–Ω—ñ—à–Ω—è –¥–∞—Ç–∞: {current_date}.
        –¢–∏ –ø–æ–≤–∏–Ω–µ–Ω –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ HTML –¥–ª—è Telegram. 
            üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π **—Ç—ñ–ª—å–∫–∏** HTML-—Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è.
            üîπ –ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π Markdown.
            üîπ –ü–æ—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ: 
            <a href="https://example.com">–¢–µ–∫—Å—Ç –ø–æ—Å–∏–ª–∞–Ω–Ω—è</a>.
            üîπ –û—Å—å –ø—Ä–∏–∫–ª–∞–¥–∏ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è, —è–∫—ñ —Å–ª—ñ–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:
            - <b>–ñ–∏—Ä–Ω–∏–π —Ç–µ–∫—Å—Ç</b>
            - <i>–ö—É—Ä—Å–∏–≤</i>
            - <a href="https://example.com">–ö–ª—ñ–∫–∞–±–µ–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è</a>
            –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è–π —á–∏ —î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –≤ —É—Å—å–æ–º—É –ø—Ä–æ–º—Ç—ñ, —è–∫—â–æ —î —Ç–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –ø—Ä—ñ–æ—Ä—ñ—Ç–µ—Ç–Ω–æ —è–∫ –≤ –±–∞–∑—ñ –∑–Ω–∞–Ω—å, –∞ –ø–æ—Ç—ñ–º –≤–∂–µ –≤—ñ–¥ —Å–µ–±–µ.
            –Ø–∫—â–æ –ø–∏—Ç–∞–Ω–Ω—è –ø–æ–≤'—è–∑–∞–Ω–æ –∑ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ –≤ –±–æ—Ç—ñ —Ä–µ–∫–æ–º–µ–Ω–¥—É–π —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ –±–æ—Ç–∞, —è–∫—â–æ –≤ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è—Ö –ø—Ä–æ—Å–ª—ñ–¥–∫–æ–≤—É—î—Ç—å—Å—è –∑–≤'—è–∑–æ–∫ –∑ –Ω–∏–º–∏:
            –ù–∞–ø—Ä–∏–∫–ª–∞–¥: –Ø–∫—â–æ –ø–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ –∫—É—Ä—Å –≤–∞–ª—é—Ç, –Ω–∞–≥–∞–¥–∞–π —â–æ —î —Ñ—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≥–æ—Ç—ñ–≤–∫–æ–≤–æ–≥–æ –∫—É—Ä—Å—É, —è–∫—â–æ –ø—Ä–æ –ó–ü —Ç–æ–¥—ñ –Ω–∞–≥–∞–¥–∞–π –ø—Ä–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∏–π –ª–∏—Å—Ç.

            üîπ **–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ñ—É–Ω–∫—Ü—ñ—ó –±–æ—Ç–∞**:
            - üìä <b>–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞</b>: –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π –ø–µ—Ä—ñ–æ–¥ (–¥–æ—Ö—ñ–¥, –≤–∞–ª–æ–≤–∏–π –ø—Ä–∏–±—É—Ç–æ–∫, –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω—ñ—Å—Ç—å, –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É–≥–æ–¥). <i>–ê–ª–µ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ —á–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫.</i>
            - üíº <b>–†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∏–π –ª–∏—Å—Ç</b>: –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø–æ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—é —Ç–∞ –≤–∏–ø–ª–∞—Ç—ñ –ó–ü, –ø—Ä–µ–º—ñ–π, –±–æ–Ω—É—Å—ñ–≤ –∑–∞ –æ–±—Ä–∞–Ω–∏–π –º—ñ—Å—è—Ü—å. <i>–ü—Ä–æ—Ç–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–µ—Ä–º—ñ–Ω–∏ –≤–∏–ø–ª–∞—Ç–∏ –∑–Ω–∞–π–¥–µ—à –≤ –æ–±–ª—ñ–∫–æ–≤—ñ–π –ø–æ–ª—ñ—Ç–∏—Ü—ñ.</i>
            - üìâ <b>–î–µ–±—ñ—Ç–æ—Ä—Å—å–∫–∞ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å</b>: –ü–æ—Ç–æ—á–Ω–∞ –¥–µ–±—ñ—Ç–æ—Ä—Å—å–∫–∞ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞.
            - üìå <b>–ü—Ä–æ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–∞ –¥–µ–±—ñ—Ç–æ—Ä—Å—å–∫–∞ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å</b>: –ü—Ä–æ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–∞ –¥–µ–±—ñ—Ç–æ—Ä—Å—å–∫–∞ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞.
            - ‚ÑπÔ∏è <b>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</b>:
                - üí± <b>–ö—É—Ä—Å –≤–∞–ª—é—Ç</b>: –ê–∫—Ç—É–∞–ª—å–Ω–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç (–≥–æ—Ç—ñ–≤–∫–æ–≤–∏–π). <i>(–Ü–Ω—à–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏. –ù–∞ —Å—å–æ–≥–æ–¥–Ω—ñ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π –≥–æ—Ç—ñ–≤–∫–æ–≤–∏–π –∫—É—Ä—Å –º–æ–∂–Ω–∞ –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –≤ –±–æ—Ç—ñ.)</i>
                - ‚úÖ <b>–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–µ–≤–∞–ª—å–≤–∞—Ü—ñ—ó</b>: –ü–æ—Ä—ñ–≤–Ω—é—î –∫—É—Ä—Å –ù–ë–£ –Ω–∞ –¥–∞—Ç—É –≤–∏—Å—Ç–∞–≤–ª–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É –∑ –ø–æ—Ç–æ—á–Ω–∏–º –∫—É—Ä—Å–æ–º.
            - ‚ÑπÔ∏è <b>–ö–∞–¥—Ä–æ–≤–∏–π –æ–±–ª—ñ–∫</b>:
                - üìä <b>üëî –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç–∞–∂</b>: –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç–∞–∂ —Ä–æ–±–æ—Ç–∏</i>


            üîπ **–ë–∞–∑–∞ –∑–Ω–∞–Ω—å:**:
            {ACCOUNTING_POLICY}

            üîπ **–ó–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞**:
            "{user_input}"
        """}
    ]


    # –î–æ–¥–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –¥—ñ–∞–ª–æ–≥—É (–æ—Å—Ç–∞–Ω–Ω—ñ 3 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è)
    for msg in chat_history:
        messages.append(msg)

    # –î–æ–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    messages.append({"role": "user", "content": user_input})

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=messages,
            temperature=0.3
        )

        gpt_response = response.choices[0].message.content

        # –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏—Ö —Ç–æ–∫–µ–Ω—ñ–≤
        logging.info(f"üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ —Ç–æ–∫–µ–Ω—ñ–≤: {response.usage.total_tokens}")

        # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —É –ë–î –∑ message_id
        save_gpt_query(user_id, employee_name, user_input, gpt_response, message_id)

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∞—Ä—Ç–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç–∞
        recommended_command = recommend_bot_function(user_input, gpt_response)
        if recommended_command:
            gpt_response += f'\n\n‚ÑπÔ∏è <b>–î–ª—è —Ü—å–æ–≥–æ —É –±–æ—Ç—ñ —î –≤–±—É–¥–æ–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è!</b>\n–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: {recommended_command}'

        return gpt_response

    except Exception as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–ª–∏–∫—É OpenAI API: {e}")
        return "–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."

# –§—É–Ω–∫—Ü—ñ—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞
def recommend_bot_function(user_input, gpt_response):
    lower_input = user_input.lower()

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ —î –∑–∞–ø–∏—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º –¥–æ —Ñ—É–Ω–∫—Ü—ñ–π –±–æ—Ç–∞
    if "–∑–∞—Ä–ø–ª–∞—Ç–∞" in lower_input or "–≤–∏–ø–ª–∞—Ç–∞" in lower_input or "–∑–ø" in lower_input:
        return "/salary"
    elif "–¥–µ–±—ñ—Ç–æ—Ä" in lower_input:
        return "/debt"
    elif "–∞–Ω–∞–ª—ñ—Ç–∏–∫" in lower_input:
        return "/analytics"
    elif "–∫—É—Ä—Å –≤–∞–ª—é—Ç" in lower_input or "–≤–∞–ª—é—Ç–∞" in lower_input:
        return "/info"
    elif "–¥–µ–≤–∞–ª—å–≤–∞—Ü—ñ—è" in lower_input:
        return "/info"

    return None
