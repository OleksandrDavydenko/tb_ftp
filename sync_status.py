import logging
from datetime import datetime
import requests

from auth import get_power_bi_token, normalize_phone_number
from db import (
    get_all_users,
    update_user_status,
    delete_user_payments,
    update_user_joined_at,
    update_employee_name,
)

DATASET_ID = '8b80be15-7b31-49e4-bc85-8b37a0d98f1c'
POWER_BI_URL = f'https://api.powerbi.com/v1.0/myorg/datasets/{DATASET_ID}/executeQueries'


def _fetch_power_bi_directory():
    """
    –†–∞–∑–æ–≤–∏–π –∑–∞–ø–∏—Ç —É Power BI: –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞–ø—É –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ ‚Üí (Employee, Status).
    –Ø–∫—â–æ –∑–∞–ø–∏—Ç –Ω–µ –≤–¥–∞–≤—Å—è ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î None (—â–æ–± –Ω–µ –ª–∞–º–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å–∏ –ª–æ–∫–∞–ª—å–Ω–æ).
    """
    token = get_power_bi_token()
    if not token:
        logging.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–∫–µ–Ω Power BI ‚Äî –ø–µ—Ä–µ—Ä–∏–≤–∞—é —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é —Å—Ç–∞—Ç—É—Å—ñ–≤.")
        return None

    headers = {
        'Authorization': f'Bearer {token}',
        'Content-Type': 'application/json'
    }

    # –ë–µ—Ä–µ–º–æ –≤—Å—ñ—Ö —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ –∑ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º —ñ —Å—Ç–∞—Ç—É—Å–æ–º (–±–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ñ—ñ–ª—å—Ç—Ä—ñ–≤)
    # –î–∞–ª—ñ –≤–∂–µ —É –∫–æ–¥—ñ –≤–∏—Ä—ñ—à—É—î–º–æ, —Ö—Ç–æ '–ê–∫—Ç–∏–≤–Ω–∏–π', –∞ —Ö—Ç–æ –Ω—ñ.
    query_data = {
        "queries": [
            {
                "query": """
                    EVALUATE
                    SELECTCOLUMNS(
                        FILTER(
                            Employees,
                            NOT(ISBLANK(Employees[PhoneNumber]))
                        ),
                        "Employee", Employees[Employee],
                        "PhoneNumber", Employees[PhoneNumber],
                        "Status", Employees[Status]
                    )
                """
            }
        ],
        "serializerSettings": {"includeNulls": True}
    }

    try:
        resp = requests.post(POWER_BI_URL, headers=headers, json=query_data, timeout=60)
    except Exception as e:
        logging.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ Power BI: {e}")
        return None

    if resp.status_code != 200:
        logging.error(f"‚ùå Power BI –ø–æ–≤–µ—Ä–Ω—É–≤ {resp.status_code}: {resp.text}")
        return None

    data = resp.json()
    try:
        rows = data["results"][0]["tables"][0].get("rows", [])
    except (KeyError, IndexError):
        rows = []

    directory = {}
    for r in rows:
        # –ö–ª—é—á—ñ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø—Ä–∏—Ö–æ–¥—è—Ç—å —É —Ñ–æ—Ä–º–∞—Ç—ñ –∑ –¥—É–∂–∫–∞–º–∏: "[PhoneNumber]" —Ç–æ—â–æ
        phone_raw = r.get("[PhoneNumber]", "") or ""
        emp_name = r.get("[Employee]", "") or ""
        status = r.get("[Status]", "") or ""

        norm = normalize_phone_number(phone_raw)
        if norm:
            directory[norm] = (emp_name, status)

    logging.info(f"üóÇÔ∏è –û—Ç—Ä–∏–º–∞–Ω–æ –∑ Power BI –∑–∞–ø–∏—Å—ñ–≤: {len(directory)}")
    return directory


def sync_user_statuses():
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î —Å—Ç–∞—Ç—É—Å–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –ë–î —Ç–∞ Power BI:
    - —Ä–∞–∑–æ–º –≤–∏—Ç—è–≥—É—î –¥–æ–≤—ñ–¥–Ω–∏–∫ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤/—Å—Ç–∞—Ç—É—Å—ñ–≤/—ñ–º–µ–Ω –∑ Power BI;
    - –ø–æ –∫–æ–∂–Ω–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑–≤—ñ—Ä—è—î —Å—Ç–∞—Ç—É—Å;
    - –æ–Ω–æ–≤–ª—é—î —Å—Ç–∞—Ç—É—Å —É –ë–î —Ç–∞ —á–∏—Å—Ç–∏—Ç—å –ø–ª–∞—Ç–µ–∂—ñ –¥–ª—è 'deleted';
    - –æ–Ω–æ–≤–ª—é—î employee_name –∑–∞ –ø–æ—Ç—Ä–µ–±–∏.
    """
    logging.info("üîÑ –ü–æ—á–∞—Ç–æ–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤...")

    # 1) –†–∞–∑–æ–≤–æ —Ç—è–≥–Ω–µ–º–æ –¥–æ–≤—ñ–¥–Ω–∏–∫ –∑ Power BI
    directory = _fetch_power_bi_directory()
    if directory is None:
        # –ù–µ –º—ñ–Ω—è—î–º–æ —Å—Ç–∞—Ç—É—Å–∏, —è–∫—â–æ Power BI –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
        logging.warning("‚ö†Ô∏è –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é —Å—Ç–∞—Ç—É—Å—ñ–≤ –ø—Ä–æ–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å Power BI.")
        return

    # 2) –ë–µ—Ä–µ–º–æ –≤—Å—ñ—Ö –ª–æ–∫–∞–ª—å–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    users = get_all_users()
    updated_users = 0
    deleted_users = 0
    updated_names = 0

    for user in users:
        phone_number = user["phone_number"]
        current_status = user["status"]
        current_employee_name = user.get("employee_name")

        norm_phone = normalize_phone_number(phone_number)
        emp_name_from_pbi = None
        status_from_pbi = None

        # –Ø–∫—â–æ –Ω–æ–º–µ—Ä —î —É –¥–æ–≤—ñ–¥–Ω–∏–∫—É ‚Äî –±–µ—Ä–µ–º–æ –π–æ–≥–æ —Å—Ç–∞—Ç—É—Å —Ç–∞ —ñ–º'—è
        if norm_phone in directory:
            emp_name_from_pbi, status_from_pbi = directory[norm_phone]

        # –¢–≤–æ—è –≤–∏—Ö—ñ–¥–Ω–∞ –ª–æ–≥—ñ–∫–∞: —Ç—ñ–ª—å–∫–∏ "–ê–∫—Ç–∏–≤–Ω–∏–π" = active, —ñ–Ω–∞–∫—à–µ ‚Äî deleted
        new_status = "active" if status_from_pbi == "–ê–∫—Ç–∏–≤–Ω–∏–π" else "deleted"

        # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É, —è–∫—â–æ –≤—ñ–Ω –∑–º—ñ–Ω–∏–≤—Å—è
        if current_status != new_status:
            logging.info(f"üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –¥–ª—è {phone_number}: {current_status} ‚Üí {new_status}")

            if new_status == "deleted":
                delete_user_payments(phone_number)
                deleted_users += 1

            if current_status == "deleted" and new_status == "active":
                update_user_joined_at(phone_number, datetime.now())

            update_user_status(phone_number, new_status)
            updated_users += 1

        # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ, —è–∫—â–æ –≤–æ–Ω–æ —î –≤ Power BI —ñ –∑–º—ñ–Ω–∏–ª–æ—Å—å/–±—É–ª–æ None
        if emp_name_from_pbi and (current_employee_name is None or current_employee_name != emp_name_from_pbi):
            logging.info(f"üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ –¥–ª—è {phone_number}: {current_employee_name} ‚Üí {emp_name_from_pbi}")
            update_employee_name(phone_number, emp_name_from_pbi)
            updated_names += 1

    logging.info(
        f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {updated_users} –æ–Ω–æ–≤–ª–µ–Ω–∏—Ö —Å—Ç–∞—Ç—É—Å—ñ–≤, "
        f"{updated_names} –æ–Ω–æ–≤–ª–µ–Ω–∏—Ö —ñ–º–µ–Ω, {deleted_users} –ø–ª–∞—Ç–µ–∂—ñ–≤ –≤–∏–¥–∞–ª–µ–Ω–æ."
    )
