import asyncio
from telegram import Update
from telegram.ext import CallbackContext

async def clear_chat_history(update: Update, context: CallbackContext):
    """–í–∏–¥–∞–ª—è—î –≤—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—ñ –±–æ—Ç –º–æ–∂–µ –≤–∏–¥–∞–ª–∏—Ç–∏, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —ó—Ö –±—ñ–ª—å—à–µ 100."""
    chat_id = update.message.chat_id

    # –í–∏–¥–∞–ª—è—î–º–æ –∫–æ–º–∞–Ω–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await context.bot.delete_message(chat_id=chat_id, message_id=update.message.message_id)
    except:
        pass  # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏

    messages_deleted = 0  # –õ—ñ—á–∏–ª—å–Ω–∏–∫ –≤–∏–¥–∞–ª–µ–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å

    while True:
        messages_to_delete = []

        async for message in context.bot.get_chat_history(chat_id, limit=100):
            messages_to_delete.append(message.message_id)

        if not messages_to_delete:
            break  # –Ø–∫—â–æ –Ω–µ–º–∞—î –±—ñ–ª—å—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, –≤–∏—Ö–æ–¥–∏–º–æ

        for message_id in messages_to_delete:
            try:
                await context.bot.delete_message(chat_id=chat_id, message_id=message_id)
                messages_deleted += 1
            except:
                pass  

        await asyncio.sleep(1)  # –£–Ω–∏–∫–∞—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è API

    confirmation_message = await update.message.reply_text(f"üóë –Ü—Å—Ç–æ—Ä—ñ—é –æ—á–∏—â–µ–Ω–æ! –í–∏–¥–∞–ª–µ–Ω–æ {messages_deleted} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.")

    await asyncio.sleep(3)
    try:
        await context.bot.delete_message(chat_id=chat_id, message_id=confirmation_message.message_id)
    except:
        pass
