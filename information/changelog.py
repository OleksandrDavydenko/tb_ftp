# information/changelog.py
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import CallbackContext

# ‚úèÔ∏è –†–µ–¥–∞–≥—É–π —Ü–µ–π —Å–ø–∏—Å–æ–∫: –¥–∞—Ç–∞ + –∫–æ—Ä–æ—Ç–∫—ñ –ø—É–Ω–∫—Ç–∏
CHANGELOG_ENTRIES = [
    ("20.10.2025", [
        "–í–∏–∫–æ–Ω–∞–Ω–æ –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –¥–Ω—ñ–≤ –≤—ñ–¥–ø—É—Å—Ç–æ–∫ –¥–æ —Ü—ñ–ª–æ–≥–æ —á–∏—Å–ª–∞ –ø—Ä–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ.",
    ]),
    ("21.10.2025", [
        "–î–æ–¥–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª ¬´–û–ø–∏—Å –∑–º—ñ–Ω¬ª —É –º–µ–Ω—é –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è.",
        "–°—Ç–≤–æ—Ä–µ–Ω—ñ –∫–æ—Ä–æ—Ç–∫—ñ –∑–∞–ø–∏—Ç–∏ —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª–∏—à–µ —Ç–∏—Ö —Ä–æ–∫—ñ–≤ —ñ –º—ñ—Å—è—Ü—ñ–≤, "
        "—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø–æ —è–∫–∏–º —ñ—Å–Ω—É—î –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É —Ä–æ–∑–¥—ñ–ª–∞—Ö ¬´–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞¬ª —Ç–∞ ¬´–ó–∞—Ä–ø–ª–∞—Ç–∞¬ª.",
        "–î–æ–¥–∞–Ω–æ –∑–≤—ñ—Ç –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞ –ø–æ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—é –ø—Ä–µ–º—ñ–π (–≤–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤ xlsx).",
    ]),
    ("22.10.2025", [
        "–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.",
        "–î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –ù–∞–∑–∞–¥ —Ç–∞ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é, –ø—ñ—Å–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ñ–∞–π–ª—É –∑ –ë–æ–Ω—É—Å–∞–º–∏ —Ç–∞ –í—ñ–¥–æ–º—ñ—Å—Ç—å –ö–µ—Ä—ñ–≤–Ω–∏–∫–∞.",
    ]),
    ("23.10.2025", [
        "–Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¢–∞–±–ª–∏—Ü—ñ –î–µ–±—ñ—Ç–æ—Ä–∫–∏ –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–µ, –≤–æ–Ω–æ —Ä–æ–∑–±–∏–≤–∞—î—Ç—å—Å—è –Ω–∞ —á–∞—Å—Ç–∏–Ω–∏ —ñ –Ω–∞–¥—Å–∏–ª–∞—î—Ç—å—Å—è –ø–æ —á–µ—Ä–∑—ñ.",
        
    ]),
]


def _build_changelog_text() -> str:
    """–§–æ—Ä–º—É—î HTML-—Ç–µ–∫—Å—Ç –∑ CHANGELOG_ENTRIES (–Ω–æ–≤—ñ –∑–≤–µ—Ä—Ö—É —É —Å–ø–∏—Å–∫—É)."""
    if not CHANGELOG_ENTRIES:
        return (
            "üÜï <b>–û–ø–∏—Å –∑–º—ñ–Ω</b>\n\n"
            "<b>21.10.2025</b>\n"
            "‚Ä¢ –î–æ–¥–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª ¬´–û–ø–∏—Å –∑–º—ñ–Ω¬ª —É –º–µ–Ω—é –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è.\n"
            "‚Ä¢ –ö–Ω–æ–ø–∫–∏ ¬´–ù–∞–∑–∞–¥¬ª —Ç–∞ ¬´–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é¬ª ‚Äî –∫–æ–º–ø–∞–∫—Ç–Ω—ñ –≤ –æ–¥–∏–Ω —Ä—è–¥.\n"
        )

    blocks = []
    for date, items in CHANGELOG_ENTRIES:
        lines = "\n".join(f"‚Ä¢ {item}" for item in items)
        blocks.append(f"<b>{date}</b>\n{lines}")
    return "üÜï <b>–û–ø–∏—Å –∑–º—ñ–Ω</b>\n\n" + "\n\n".join(blocks)


async def _send_long_html(update: Update, html: str, limit: int = 3900) -> None:
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î HTML-—Ç–µ–∫—Å—Ç. –Ø–∫—â–æ –¥–æ–≤—à–∏–π –∑–∞ –ª—ñ–º—ñ—Ç ‚Äî —Ä—ñ–∂–µ –ø–æ –Ω–∞–π–±–ª–∏–∂—á–æ–º—É –ø–µ—Ä–µ–Ω–æ—Å—É —Ä—è–¥–∫–∞."""
    if len(html) <= limit:
        await update.message.reply_text(html, parse_mode="HTML")
        return

    start = 0
    n = len(html)
    while start < n:
        end = min(start + limit, n)
        if end < n:
            cut = html.rfind("\n", start, end)
            if cut == -1 or cut <= start:
                cut = end
        else:
            cut = end
        await update.message.reply_text(html[start:cut], parse_mode="HTML")
        start = cut + (1 if cut < n and html[cut:cut+1] == "\n" else 0)


async def show_changelog(update: Update, context: CallbackContext) -> None:
    """
    –í—ñ–¥–æ–±—Ä–∞–∂–∞—î changelog –∑ —Ü—å–æ–≥–æ —Ñ–∞–π–ª—É.
    –ö–Ω–æ–ø–∫–∏ ¬´–ù–∞–∑–∞–¥¬ª —ñ ¬´–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é¬ª ‚Äî –∫–æ–º–ø–∞–∫—Ç–Ω—ñ —Ç–∞ –ø–æ—Ä—É—á (–æ–¥–∏–Ω —Ä—è–¥).
    """
    text = _build_changelog_text()
    await _send_long_html(update, text)

    reply_markup = ReplyKeyboardMarkup(
        [[KeyboardButton("–ù–∞–∑–∞–¥"), KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é")]],
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    await update.message.reply_text("–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:", reply_markup=reply_markup)
