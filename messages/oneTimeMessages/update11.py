import os
import logging
import asyncio
from telegram import Bot
from db import get_active_users

TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
bot = Bot(token=TELEGRAM_BOT_TOKEN)

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def send_message_to_users():
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.run_until_complete(async_send_message_to_users())

async def async_send_message_to_users():
    """ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—Å—ñ–º –∞–∫—Ç–∏–≤–Ω–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º. """
    users = get_active_users()
    message = (
        "üç∑ü•≥ <b>–î—Ä—É–∑—ñ, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤ —É —Å–∞–º–æ–º—É —Ä–æ–∑–ø–∞–ª—ñ!</b>\n\n"
        "–î–∞–≤–∞–π—Ç–µ –ø—ñ–¥–Ω—ñ–º–µ–º–æ –∫–µ–ª–∏—Ö–∏ –∑–∞ <b>–§–¢–ü</b> üöÄ, –∑–∞ –Ω–∞—à—É –∫–æ–º–∞–Ω–¥—É üí™ "
        "—ñ –∑–∞ –∫–æ–∂–Ω–æ–≥–æ –∑ –Ω–∞—Å, —Ö—Ç–æ —Ä–æ–±–∏—Ç—å —Å–ø—ñ–ª—å–Ω—É —Å–ø—Ä–∞–≤—É –∫—Ä–∞—â–æ—é! üèÜ\n\n"
        "–•–∞–π —Å—å–æ–≥–æ–¥–Ω—ñ –±—É–¥–µ –±–∞–≥–∞—Ç–æ —Å–º—ñ—Ö—É üòÇ, –≥–∞—Ä–Ω–∏—Ö —Ä–æ–∑–º–æ–≤ üó£Ô∏è "
        "—Ç–∞ –ø—Ä–∏—î–º–Ω–∏—Ö –º–æ–º–µ–Ω—Ç—ñ–≤, —è–∫—ñ –º–∏ –±—É–¥–µ–º–æ –∑–≥–∞–¥—É–≤–∞—Ç–∏ —â–µ –¥–æ–≤–≥–æ üé∂‚ú®\n\n"
        "–í—Å—ñ–º –≥–∞—Ä–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ—é —Ç–∞ —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä–µ–º–æ–≥ üá∫üá¶üî•"
    )





    for user in users:
        telegram_id = user.get('telegram_id')
        employee_name = user.get('employee_name')
        if telegram_id:
            try:
                await bot.send_message(chat_id=telegram_id, text=message, parse_mode='HTML')
                logging.info(f"‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: {employee_name} (Telegram ID: {telegram_id})")
            except Exception as e:
                logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è {employee_name}: {e}")
        else:
            logging.warning(f"‚ö†Ô∏è –í—ñ–¥—Å—É—Ç–Ω—ñ–π Telegram ID –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {employee_name}")
