import os
import logging
from apscheduler.schedulers.blocking import BlockingScheduler
from telegram import Bot
from db import get_db_connection

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
bot = Bot(token=TELEGRAM_BOT_TOKEN)

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def get_telegram_id_by_name(employee_name):
    """ –û—Ç—Ä–∏–º—É—î Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ –π–æ–≥–æ —ñ–º'—è–º. """
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT telegram_id FROM users WHERE employee_name = %s", (employee_name,))
    user_data = cursor.fetchone()
    conn.close()
    return user_data[0] if user_data else None

import asyncio

def send_message_to_users():
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.run_until_complete(async_send_message_to_users())

async def async_send_message_to_users():
    """ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º '–î–∞–≤–∏–¥–µ–Ω–∫–æ –û–ª–µ–∫—Å–∞–Ω–¥—Ä' —ñ '–°—Ç—É–ø–∞ –û–ª–µ–∫—Å–∞–Ω–¥—Ä'. """
    employee_names = ["–î–∞–≤–∏–¥–µ–Ω–∫–æ –û–ª–µ–∫—Å–∞–Ω–¥—Ä", "–°—Ç—É–ø–∞ –û–ª–µ–∫—Å–∞–Ω–¥—Ä"]
    message = ("""
        üöÄ <b>–û–Ω–æ–≤–ª–µ–Ω–Ω—è Telegram-–±–æ—Ç–∞!</b> üöÄ<br><br>
        –Ø–∫—â–æ –ú—ñ–Ω—ñ—Å—Ç–µ—Ä—Å—Ç–≤–æ —Ç—ñ–ª—å–∫–∏ —Ä–æ–∑–º—ñ—Ä–∫–æ–≤—É—î, —è–∫ –≤–ø—Ä–æ–≤–∞–¥–∏—Ç–∏ —à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç —É –î—ñ—é, —Ç–æ –º–∏ –≤–∂–µ —Ü–µ –∑—Ä–æ–±–∏–ª–∏! ü§ñüí°<br><br>
        <b>–ù–∞—à –±–æ—Ç –æ—Ç—Ä–∏–º–∞–≤ –Ω–æ–≤–æ–≥–æ –ø–æ–º—ñ—á–Ω–∏–∫–∞, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º:</b><br>
        - –†–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—è –∑ –æ–±–ª—ñ–∫–æ–≤–æ—é –ø–æ–ª—ñ—Ç–∏–∫–æ—é üìö<br>
        - –î—ñ–∑–Ω–∞—Ç–∏—Å—å, –∫–æ–ª–∏ –±—É–¥–µ –≤–∏–ø–ª–∞—Ç–∞ –∑–∞—Ä–æ–±—ñ—Ç–Ω–æ—ó –ø–ª–∞—Ç–∏ üí∏<br>
        - –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥–∫–∞–∑–∫–∏ –ø–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –±–æ—Ç–∞ ü§ñ<br>
        - –ó–Ω–∞–π—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –≤–∞—à—ñ –ø–∏—Ç–∞–Ω–Ω—è —à–≤–∏–¥—à–µ —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–µ ‚è≥<br><br>
        üéØ <b>–í–∏ –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç–∏ —É—á–∞—Å—Ç—å —É –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –±–æ—Ç–∞!</b><br>
        –ü—Ä–æ—Å—Ç–æ —Å—Ç–∞–≤—Ç–µ –ø–∏—Ç–∞–Ω–Ω—è, —è–∫—ñ –≤–∞—Å —Ü—ñ–∫–∞–≤–ª—è—Ç—å, —ñ —Ü–µ –¥–æ–ø–æ–º–æ–∂–µ –∑—Ä–æ–±–∏—Ç–∏ –ø–æ–º—ñ—á–Ω–∏–∫–∞ —â–µ —Ä–æ–∑—É–º–Ω—ñ—à–∏–º!<br><br>
        ‚ö†Ô∏è <i>–¶–µ —Ç–µ—Å—Ç–æ–≤–∏–π —Ä–µ–∂–∏–º, —Ç–æ–∂ –º–æ–∂–ª–∏–≤—ñ –Ω–µ–≤–µ–ª–∏–∫—ñ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç—ñ, –∞–ª–µ –º–∏ –ø—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ –≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è–º!</i> üí™<br>
    """)

    
    for employee_name in employee_names:
        telegram_id = get_telegram_id_by_name(employee_name)
        
        if telegram_id:
            try:
                await bot.send_message(chat_id=telegram_id, text=message, parse_mode='HTML')
                logging.info(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {employee_name} (Telegram ID: {telegram_id})")
            except Exception as e:
                logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {employee_name}: {e}")
        else:
            logging.warning(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {employee_name} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö.")