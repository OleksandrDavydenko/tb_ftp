from datetime import datetime
from db import get_db_connection  # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
from telegram import Bot
import logging

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# ID –±–æ—Ç–∞ –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
BOT_TOKEN = "YOUR_BOT_TOKEN"
bot = Bot(token=BOT_TOKEN)

# Telegram ID –î–∞–≤–∏–¥–µ–Ω–∫–æ –û–ª–µ–∫—Å–∞–Ω–¥—Ä–∞
USER_TELEGRAM_ID = 203148640  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π ID

def get_overdue_debts(manager_name):
    """
    –û—Ç—Ä–∏–º—É—î –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—É –¥–µ–±—ñ—Ç–æ—Ä—Å—å–∫—É –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
    """
    try:
        connection = get_db_connection()
        cursor = connection.cursor()

        query = """
            SELECT Client, Sum_$, PlanDatePay
            FROM Deb
            WHERE Manager = %s AND PlanDatePay < %s
        """
        today = datetime.now().date()
        cursor.execute(query, (manager_name, today))

        rows = cursor.fetchall()
        connection.close()

        overdue_debts = [{"client": row[0], "sum": row[1], "plan_date_pay": row[2]} for row in rows]
        return overdue_debts
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–æ—ó –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–æ—Å—Ç—ñ: {e}")
        return []

def send_overdue_debt_message(telegram_id, debts):
    """
    –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—É –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å.
    """
    if not debts:
        message = "–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–æ—ó –¥–µ–±—ñ—Ç–æ—Ä—Å—å–∫–æ—ó –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–æ—Å—Ç—ñ. üéâ"
    else:
        message = "üìã –ü—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∞ –¥–µ–±—ñ—Ç–æ—Ä—Å—å–∫–∞ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å:\n"
        for debt in debts:
            message += f"–ö–ª—ñ—î–Ω—Ç: {debt['client']}, –°—É–º–∞: ${debt['sum']:.2f}, –ü–ª–∞–Ω–æ–≤–∞–Ω–∞ –¥–∞—Ç–∞ –æ–ø–ª–∞—Ç–∏: {debt['plan_date_pay']}\n"
    
    try:
        bot.send_message(chat_id=telegram_id, text=message)
        logging.info(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {telegram_id}.")
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {telegram_id}: {e}")

def check_and_notify_overdue_debts():
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—É –¥–µ–±—ñ—Ç–æ—Ä—Å—å–∫—É –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å.
    """
    manager_name = "–î–∞–≤–∏–¥–µ–Ω–∫–æ –û–ª–µ–∫—Å–∞–Ω–¥—Ä"  # –¢–µ—Å—Ç–æ–≤–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä
    overdue_debts = get_overdue_debts(manager_name)
    send_overdue_debt_message(USER_TELEGRAM_ID, overdue_debts)
